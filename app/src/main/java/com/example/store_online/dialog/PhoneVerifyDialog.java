package com.example.store_online.dialog;import android.app.Activity;import android.app.Dialog;import android.graphics.drawable.ColorDrawable;import android.view.Gravity;import android.view.View;import android.view.Window;import android.view.WindowManager;import android.widget.Button;import android.widget.EditText;import android.widget.TextView;import androidx.annotation.NonNull;import com.example.store_online.R;import com.google.android.gms.tasks.OnCompleteListener;import com.google.android.gms.tasks.Task;import com.google.firebase.FirebaseException;import com.google.firebase.auth.AuthCredential;import com.google.firebase.auth.EmailAuthProvider;import com.google.firebase.auth.FirebaseAuth;import com.google.firebase.auth.FirebaseUser;import com.google.firebase.auth.PhoneAuthCredential;import com.google.firebase.auth.PhoneAuthOptions;import com.google.firebase.auth.PhoneAuthProvider;import java.util.concurrent.TimeUnit;public class PhoneVerifyDialog {    private Activity activity;    private EditText edtCodeVerify;    private TextView txtReSend;    private Button btnYes,btnNo;    FirebaseAuth mAuth;    FirebaseUser mUser;    public PhoneVerifyDialog(Activity myActivity) {        activity = myActivity;    }    public void startPhoneVerifyDialog(String phone,String verificationId){        Dialog dialog = new Dialog(activity);        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);        dialog.setContentView(R.layout.dialog_phone_verify);        Window window = dialog.getWindow();        if (window == null) {            return;        }        window.setLayout(WindowManager.LayoutParams.MATCH_PARENT, WindowManager.LayoutParams.WRAP_CONTENT);        window.setBackgroundDrawable(new ColorDrawable(0));        WindowManager.LayoutParams windowAtttributes = window.getAttributes();        windowAtttributes.gravity = Gravity.CENTER;        window.setAttributes(windowAtttributes);        btnYes = dialog.findViewById(R.id.btnYes);        btnNo = dialog.findViewById(R.id.btnNo);        edtCodeVerify = dialog.findViewById(R.id.btnNo);        txtReSend = dialog.findViewById(R.id.txtReSend);        LoadingDialog loadingDialog = new LoadingDialog(activity);        NotificationDialog notificationDialog =new NotificationDialog(activity);        btnYes.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                String code  = edtCodeVerify.getText().toString().trim();               if(code.isEmpty()){                   edtCodeVerify.setError(activity.getResources().getString(R.string.field_empty));               }else {                   PhoneAuthCredential credential = PhoneAuthProvider.getCredential(verificationId, code);                   mUser.updatePhoneNumber(credential).addOnCompleteListener(new OnCompleteListener<Void>() {                       @Override                       public void onComplete(@NonNull Task<Void> task) {                            if(task.isSuccessful()){                                notificationDialog.startSuccessfulDialog("Thanh cong");                            }                            else {                                notificationDialog.startErrorDialog("That bai");                            }                       }                   });               }            }        });        btnNo.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {               dialog.dismiss();            }        });        txtReSend.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                PhoneAuthOptions options =                        PhoneAuthOptions.newBuilder(mAuth)                                .setPhoneNumber(phone)       // Phone number to verify                                .setTimeout(60L, TimeUnit.SECONDS) // Timeout and unit                                .setActivity(activity)                 // Activity (for callback binding)                                .setCallbacks(new PhoneAuthProvider.OnVerificationStateChangedCallbacks() {                                    @Override                                    public void onVerificationCompleted(@NonNull PhoneAuthCredential phoneAuthCredential) {                                    }                                    @Override                                    public void onVerificationFailed(@NonNull FirebaseException e) {                                    }                                    @Override                                    public void onCodeSent(@NonNull String verificationId, @NonNull PhoneAuthProvider.ForceResendingToken forceResendingToken) {                                        super.onCodeSent(verificationId, forceResendingToken);                                    }                                })          // OnVerificationStateChangedCallbacks                                .build();                PhoneAuthProvider.verifyPhoneNumber(options);            }        });        dialog.show();    }}